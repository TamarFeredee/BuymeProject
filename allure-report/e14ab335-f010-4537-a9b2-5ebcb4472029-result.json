{"name": "test_01_intro_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"ember1917\"]\"}\n  (Session info: chrome=115.0.5790.170); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x00000001008eff48 chromedriver + 4226888\n1   chromedriver                        0x00000001008e84f4 chromedriver + 4195572\n2   chromedriver                        0x000000010052cd68 chromedriver + 281960\n3   chromedriver                        0x0000000100567fc8 chromedriver + 524232\n4   chromedriver                        0x000000010059ec58 chromedriver + 748632\n5   chromedriver                        0x000000010055bf1c chromedriver + 474908\n6   chromedriver                        0x000000010055cef4 chromedriver + 478964\n7   chromedriver                        0x00000001008b159c chromedriver + 3970460\n8   chromedriver                        0x00000001008b56f0 chromedriver + 3987184\n9   chromedriver                        0x00000001008bb5b4 chromedriver + 4011444\n10  chromedriver                        0x00000001008b62fc chromedriver + 3990268\n11  chromedriver                        0x000000010088e1c0 chromedriver + 3826112\n12  chromedriver                        0x00000001008d2088 chromedriver + 4104328\n13  chromedriver                        0x00000001008d21e0 chromedriver + 4104672\n14  chromedriver                        0x00000001008e1f28 chromedriver + 4169512\n15  libsystem_pthread.dylib             0x000000019958afd4 _pthread_start + 320\n16  libsystem_pthread.dylib             0x0000000199585d3c thread_start + 8", "trace": "self = <buyme_test.BuymeTests testMethod=test_01_intro_page>\n\n    def test_01_intro_page(self):\n        self.intro_page.click_signin_area()\n        self.intro_page.click_signin_button()\n>       self.intro_page.fill_registration_details('tamar', 'tamar@test.com', '123456', '123456')\n\nbuyme_test.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbuyme_pages/intro_and_registration_page.py:22: in fill_registration_details\n    element = self.enter_text(By.ID, 'ember1917', first_name)\nbase/base_page.py:12: in enter_text\n    self.driver.find_element(locator_type, locator_value).send_keys(text)\n../../Library/Caches/pypoetry/virtualenvs/buymeproject-BWFspICq-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:739: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../Library/Caches/pypoetry/virtualenvs/buymeproject-BWFspICq-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1062b7150>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00019958afd4 _pthread_start + 320\\\\n16  libsystem_pthread.dylib             0x0000000199585d3c thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"ember1917\"]\"}\nE         (Session info: chrome=115.0.5790.170); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x00000001008eff48 chromedriver + 4226888\nE       1   chromedriver                        0x00000001008e84f4 chromedriver + 4195572\nE       2   chromedriver                        0x000000010052cd68 chromedriver + 281960\nE       3   chromedriver                        0x0000000100567fc8 chromedriver + 524232\nE       4   chromedriver                        0x000000010059ec58 chromedriver + 748632\nE       5   chromedriver                        0x000000010055bf1c chromedriver + 474908\nE       6   chromedriver                        0x000000010055cef4 chromedriver + 478964\nE       7   chromedriver                        0x00000001008b159c chromedriver + 3970460\nE       8   chromedriver                        0x00000001008b56f0 chromedriver + 3987184\nE       9   chromedriver                        0x00000001008bb5b4 chromedriver + 4011444\nE       10  chromedriver                        0x00000001008b62fc chromedriver + 3990268\nE       11  chromedriver                        0x000000010088e1c0 chromedriver + 3826112\nE       12  chromedriver                        0x00000001008d2088 chromedriver + 4104328\nE       13  chromedriver                        0x00000001008d21e0 chromedriver + 4104672\nE       14  chromedriver                        0x00000001008e1f28 chromedriver + 4169512\nE       15  libsystem_pthread.dylib             0x000000019958afd4 _pthread_start + 320\nE       16  libsystem_pthread.dylib             0x0000000199585d3c thread_start + 8\n\n../../Library/Caches/pypoetry/virtualenvs/buymeproject-BWFspICq-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "start": 1692541838923, "stop": 1692541865430, "uuid": "8bf5b0fd-668c-4454-9bfc-fe0d835d7a14", "historyId": "a0b98de5ca733149e8908d1121080209", "testCaseId": "a0b98de5ca733149e8908d1121080209", "fullName": "buyme_test.BuymeTests#test_01_intro_page", "labels": [{"name": "suite", "value": "buyme_test"}, {"name": "subSuite", "value": "BuymeTests"}, {"name": "host", "value": "Tamars-MBP-2.lan"}, {"name": "thread", "value": "18852-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "buyme_test"}]}